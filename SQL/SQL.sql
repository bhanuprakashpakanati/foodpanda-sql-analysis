SELECT
	CUSTOMER_ID
	,GENDER
	,AGE
	,CITY
	,SIGNUP_DATE
	,ORDER_ID
	,RESTAURANT_NAME
	,DISH_NAME
	,CATEGORY
	,QUANTITY
	,PRICE
	,PAYMENT_METHOD
	,ORDER_FREQUENCY
	,LAST_ORDER_DATE
	,LOYALTY_POINTS
	,CHURNED
	,RATING
	,RATING_DATE
	,DELIVERY_STATUS
FROM FOODPANDA;

/* === Step 1: Trim spaces and standardize text === */

UPDATE FOODPANDA
SET
	CUSTOMER_ID		    = LTRIM(RTRIM(CUSTOMER_ID))
	,GENDER				= NULLIF(LTRIM(RTRIM(GENDER)),'')
	,RESTAURANT_NAME	= NULLIF(LTRIM(RTRIM(RESTAURANT_NAME)),'')
	,DISH_NAME          = NULLIF(LTRIM(RTRIM(DISH_NAME)),'')
	,CATEGORY			= NULLIF(LTRIM(RTRIM(CATEGORY)),'')
	,QUANTITY			= NULLIF(LTRIM(RTRIM(QUANTITY)),'')
	,PRICE				= NULLIF(LTRIM(RTRIM(PRICE)),'')
	,PAYMENT_METHOD		= NULLIF(LTRIM(RTRIM(PAYMENT_METHOD)),'')
	,ORDER_FREQUENCY	= NULLIF(LTRIM(RTRIM(ORDER_FREQUENCY)),'')
	,LAST_ORDER_DATE	= NULLIF(LTRIM(RTRIM(LAST_ORDER_DATE)),'')
	,LOYALTY_POINTS		= NULLIF(LTRIM(RTRIM(LOYALTY_POINTS)),'')
	,CHURNED			= NULLIF(LTRIM(RTRIM(CHURNED)),'')
	,RATING				= NULLIF(LTRIM(RTRIM(RATING)),'')
	,RATING_DATE		= NULLIF(LTRIM(RTRIM(RATING_DATE)),'')
	,DELIVERY_STATUS	= NULLIF(LTRIM(RTRIM(DELIVERY_STATUS)),'')
FROM FOODPANDA;

/* === Step 2: Convert numeric columns safely === */

ALTER TABLE FOODPANDA
ALTER COLUMN PRICE DECIMAL(20,2) NULL;

ALTER TABLE FOODPANDA
ALTER COLUMN QUANTITY INT NULL;

ALTER TABLE FOODPANDA
ALTER COLUMN LOYALTY_POINTS INT NULL;

ALTER TABLE FOODPANDA
ALTER COLUMN ORDER_FREQUENCY INT NULL;

ALTER TABLE FOODPANDA
ALTER COLUMN RATING DECIMAL(3,2) NULL;

/* === Step 3: Convert date columns === */

ALTER TABLE FOODPANDA
ALTER COLUMN SIGNUP_DATE DATE NULL;

ALTER TABLE FOODPANDA
ALTER COLUMN LAST_ORDER_DATE DATE NULL;

ALTER TABLE FOODPANDA
ALTER COLUMN RATING_DATE DATE NULL;

/* === Step 4: Add derived columns for analysis === */
SELECT *
	,(PRICE*QUANTITY) AS REVENUE
FROM FOODPANDA;


---3.1 Customer Demographics & Base Analysis

---KQ 3.1.1: What is the breakdown of our customer base by Gender and Age group?
SELECT
	GENDER
	,AGE
	,COUNT(DISTINCT CUSTOMER_ID) AS NUM_CUSTOMERS
FROM FOODPANDA
GROUP BY
		GENDER
		,AGE
ORDER BY
		GENDER
		,AGE;

---KQ 3.1.2: Which City has the highest number of active customers?
SELECT TOP 10
	CITY
	,COUNT(DISTINCT CUSTOMER_ID) AS ACTIVE_CUSTOMERS
FROM FOODPANDA
WHERE CHURNED = 'ACTIVE'
GROUP BY CITY
ORDER BY ACTIVE_CUSTOMERS DESC;

---KQ 3.1.3: What is the distribution of customers across different cities?
WITH CITY_COUNTS AS(
	SELECT
		CITY
		,COUNT(DISTINCT CUSTOMER_ID) AS CUSTOMERS
	FROM FOODPANDA
	GROUP BY CITY
)
SELECT
	CITY
	,CUSTOMERS
	,100*CUSTOMERS/SUM(CUSTOMERS) OVER () AS PERCENTAGE_OF_CUSTOMERS
FROM CITY_COUNTS
ORDER BY CUSTOMERS DESC;


---3.2 Sales & Revenue Performance

---KQ 3.2.1: What is the total revenue generated, and what is the monthly revenue trend?
-- Total Revenue
SELECT SUM(PRICE*QUANTITY) AS TOTAL_REVENUE
FROM FOODPANDA

-- Monthly trend(using last_order_date)
SELECT 
    YEAR(LAST_ORDER_DATE) AS [YEAR]
   , MONTH(LAST_ORDER_DATE) AS [MONTH] 
   , SUM(PRICE * QUANTITY) AS REVENUE
FROM FOODPANDA
WHERE LAST_ORDER_DATE IS NOT NULL
GROUP BY 
		YEAR(LAST_ORDER_DATE)
		,MONTH(LAST_ORDER_DATE)
ORDER BY
		[YEAR]
		,[MONTH];

---KQ 3.2.2: What is the average order value (AOV)?
SELECT
	COUNT(*) AS TOTAL_RECORDS
	,SUM(PRICE * QUANTITY) AS TOTAL_REVENUE
	,(SUM(PRICE * QUANTITY) * 1.0/ COUNT(*)) AS AOV
FROM FOODPANDA;

---KQ 3.2.3: Which Restaurant_Name is the top contributor to our revenue?
SELECT TOP 10
	RESTAURANT_NAME
	,SUM(PRICE * QUANTITY)AS RESTAURANT_REVENUE
FROM FOODPANDA
GROUP BY RESTAURANT_NAME
ORDER BY RESTAURANT_REVENUE DESC;

---KQ 3.2.4: Which Dish_Name and Category are the best-selling by quantity and revenue?

-- By quantity
SELECT TOP 10
	DISH_NAME
	,CATEGORY
	,SUM(QUANTITY) AS TOTAL_QUANTITY
FROM FOODPANDA
GROUP BY
		DISH_NAME
		,CATEGORY
ORDER BY TOTAL_QUANTITY DESC;

-- By revenue
SELECT TOP 10
	DISH_NAME
	,CATEGORY
	,SUM(PRICE * QUANTITY) AS TOTAL_REVENUE
FROM FOODPANDA
GROUP BY
		DISH_NAME
		,CATEGORY
ORDER BY TOTAL_REVENUE DESC;

---KQ 3.2.5: What is the most popular Payment_Method among customers?
SELECT
	PAYMENT_METHOD
	,COUNT(*) AS ORDERS
FROM FOODPANDA
GROUP BY PAYMENT_METHOD
ORDER BY ORDERS DESC;

---3.3 Customer Behavior & Loyalty

---KQ 3.3.1: Who are our top 10 customers by total spending (Price * Quantity) and by Loyalty_Points?
--By Spending
SELECT TOP 10
		SUM(PRICE * QUANTITY) AS TOTAL_SPENDING
		,LOYALTY_POINTS
FROM FOODPANDA
GROUP BY LOYALTY_POINTS
ORDER BY 
		TOTAL_SPENDING DESC;

-- By Loyalty Points
SELECT TOP 10
		CUSTOMER_ID
		,MAX(LOYALTY_POINTS) AS MAX_LOYALTY_POINTS
FROM FOODPANDA
GROUP BY CUSTOMER_ID
ORDER BY MAX_LOYALTY_POINTS DESC;

---KQ 3.3.2: What is the correlation between Order_Frequency and total spending?
SELECT
	CUSTOMER_ID
	,MAX(ORDER_FREQUENCY) AS ORDER_FREQUENCY
	,SUM(PRICE * QUANTITY) AS TOTAL_SPENT
FROM FOODPANDA
GROUP BY CUSTOMER_ID
ORDER BY TOTAL_SPENT DESC;

---KQ 3.3.3: How does the Signup_Date correlate with customer activity and value?
WITH COHORT AS(
			SELECT
				CUSTOMER_ID
				,MIN(SIGNUP_DATE) AS SIGNUP_DATE
				,SUM(PRICE * QUANTITY) AS TOTAL_SPENT
				,COUNT(*) AS ORDERS
			FROM FOODPANDA
			GROUP BY CUSTOMER_ID
)
SELECT
	YEAR(SIGNUP_DATE) AS [YEAR]
	,MONTH(SIGNUP_DATE) AS [MONTH]
	,COUNT(CUSTOMER_ID) AS CUSTOMERS
	,AVG(TOTAL_SPENT) AS AVG_SPENT
	,AVG(ORDERS) AS AVG_ORDERS
FROM COHORT
WHERE SIGNUP_DATE IS NOT NULL
GROUP BY
		YEAR(SIGNUP_DATE)
		,MONTH(SIGNUP_DATE)
ORDER BY
		[YEAR]
		,[MONTH];

---3.4 Churn Analysis (Critical)

---KQ 3.4.1: What is the overall customer churn rate (percentage where Churned = 'Inactive')?
SELECT
	SUM(CASE
			WHEN CHURNED = 'ACTIVE' THEN 1 
			ELSE 0 
			END) * 100/COUNT(DISTINCT CUSTOMER_ID) AS CHURN_RATE_PERCETAGE
FROM FOODPANDA;

---KQ 3.4.2: What are the common characteristics (e.g., City, Age, Order_Frequency, average Rating) of churned customers?
SELECT
	CITY
	,CASE
		WHEN AGE IN ('TEENAGER') THEN '18-24'
		WHEN AGE IN('ADULT') THEN '25-34'
		WHEN AGE IN('SENIOR') THEN '35-44'
		ELSE 'UNKNOWN'
	 END AS AGE_GROUP
	,AVG(ORDER_FREQUENCY) AS AVG_ORDERS
	,AVG(RATING) AS AVG_RATING
	,COUNT(DISTINCT CUSTOMER_ID) AS CHURNED_CUSTOMERS
FROM FOODPANDA
WHERE CHURNED = 'ACTIVE'
GROUP BY
		CITY
		,CASE
		WHEN AGE IN ('TEENAGER') THEN '18-24'
		WHEN AGE IN('ADULT') THEN '25-34'
		WHEN AGE IN('SENIOR') THEN '35-44'
		ELSE 'UNKNOWN'
	 END
ORDER BY CHURNED_CUSTOMERS DESC;

---KQ 3.4.3: Is there a significant difference in the Last_Order_Date between active and churned customers?
SELECT
	CHURNED
	,AVG(DATEDIFF(DAY,LAST_ORDER_DATE,GETDATE())) AS AVG_DAYS_SINCE_LAST_ORDER
FROM FOODPANDA
WHERE LAST_ORDER_DATE IS NOT NULL
GROUP BY CHURNED;

---3.5 Operational & Service Analysis

---KQ 3.5.1: What is the distribution of Delivery_Status (e.g., Delivered, Delayed, Cancelled)?
SELECT
	DELIVERY_STATUS
	,COUNT(*) AS ORDERS
FROM FOODPANDA
GROUP BY DELIVERY_STATUS
ORDER BY ORDERS DESC;

---KQ 3.5.2: Is there a relationship between Delivery_Status and the average customer Rating?
SELECT
	DELIVERY_STATUS
	,AVG(RATING) AS AVG_RATING
FROM FOODPANDA
GROUP BY DELIVERY_STATUS;

---KQ 3.5.3: What is the average Rating per restaurant? Identify the top and bottom 5.

--TOP 5
SELECT TOP 5
		RESTAURANT_NAME
		,AVG(RATING) AS AVG_RATING
		,COUNT(RATING) AS NUM_RATINGS
FROM FOODPANDA
WHERE RATING IS NOT NULL
GROUP BY RESTAURANT_NAME
HAVING COUNT(*) >= 5
ORDER BY AVG_RATING DESC;

---BOTTOM 5
SELECT TOP 5
		RESTAURANT_NAME
		,AVG(RATING) AS AVG_RATING
		,COUNT(RATING) AS NUM_RATINGS
FROM FOODPANDA
WHERE RATING IS NOT NULL
GROUP BY RESTAURANT_NAME
HAVING COUNT(*) >= 5
ORDER BY AVG_RATING ASC;

---KQ 3.5.4: Are there specific restaurants with unusually high Cancelled or Delayed rates?
WITH REST_STATUS AS(
			SELECT
				RESTAURANT_NAME
				,ORDER_ID
				,MAX(CASE
						WHEN DELIVERY_STATUS = 'ACTIVE' THEN 1
						ELSE 0
					 END) AS IS_CANCELLED
				,MAX(CASE
						WHEN DELIVERY_STATUS = 'DELAYED' THEN 1
						ELSE 0
					 END) AS IS_DELAYED
			FROM FOODPANDA
			GROUP BY 
					RESTAURANT_NAME
					,ORDER_ID
)
SELECT TOP 20
		RESTAURANT_NAME
		,COUNT(ORDER_ID) AS ORDERS
		,SUM(IS_CANCELLED) AS TOTAL_CANCELLED_ORDERS
		,SUM(IS_DELAYED) AS TOTAL_DELAYED_ORDERS
		,100*SUM(IS_CANCELLED)/COUNT(ORDER_ID) AS CANCELLED_PERCENTAGE
		,100*SUM(IS_DELAYED)/COUNT(ORDER_ID) AS DELAYED_PERCENTAGE
FROM REST_STATUS
GROUP BY RESTAURANT_NAME
HAVING COUNT(ORDER_ID)>= 10
ORDER BY 
		CANCELLED_PERCENTAGE DESC
		,DELAYED_PERCENTAGE DESC;

/* End of script */
